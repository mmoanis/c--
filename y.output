Terminals unused in grammar

   AOP
   LOP
   IF
   ELSE
   ELSIF
   TRUE
   FALSE
   AND
   OR
   NOT
   CONTINUE
   "=="
   "!="
   ">="
   "<="


State 35 conflicts: 4 shift/reduce
State 36 conflicts: 4 shift/reduce
State 73 conflicts: 13 shift/reduce
State 74 conflicts: 13 shift/reduce
State 75 conflicts: 13 shift/reduce
State 76 conflicts: 13 shift/reduce
State 77 conflicts: 4 shift/reduce
State 78 conflicts: 4 shift/reduce
State 79 conflicts: 4 shift/reduce
State 80 conflicts: 4 shift/reduce
State 81 conflicts: 4 shift/reduce
State 82 conflicts: 4 shift/reduce
State 83 conflicts: 4 shift/reduce
State 84 conflicts: 4 shift/reduce
State 85 conflicts: 4 shift/reduce


Grammar

    0 $accept: list $end

    1 list: list statement
    2     | %empty

    3 statement: assignment_statement
    4          | declartion_statement
    5          | control_statement
    6          | parantasis_statement
    7          | expr ';'
    8          | loop_statement

    9 loop_statement: for_statement
   10               | while_statement
   11               | do_statement

   12 for_statement: FOR '(' opexpr ';' opexpr ';' opexpr ')' statement

   13 while_statement: WHILE '(' opexpr ')' statement

   14 do_statement: DO statement WHILE '(' opexpr ')'

   15 opexpr: assignment_statement2
   16       | expr
   17       | %empty

   18 assignment_statement2: VARIABLE '=' assignment_expr
   19                      | CONST VARIABLE '=' assignment_expr
   20                      | HAN3RF VARIABLE '=' assignment_expr

   21 switch_body_statement: case_statement
   22                      | '{' case_list_statement '}'

   23 case_list_statement: case_statement
   24                    | case_list_statement case_statement

   25 case_statement: CASE const_value ':' statement jump_statement ';'
   26               | DEFAULT ':' statement jump_statement ';'

   27 parantasis_statement: '{' statement_list '}'

   28 statement_list: statement
   29               | statement_list statement

   30 control_statement: SWITCH '(' VARIABLE ')' switch_body_statement

   31 jump_statement: BREAK
   32               | %empty

   33 assignment_statement: VARIABLE '=' assignment_expr ';'
   34                     | CONST VARIABLE '=' assignment_expr ';'
   35                     | HAN3RF VARIABLE '=' assignment_expr ';'

   36 assignment_expr: expr
   37                | string_expr

   38 const_value: '(' const_value ')'
   39            | INT
   40            | STRING
   41            | CHAR
   42            | DOUBLE

   43 string_expr: STRING

   44 declartion_statement: HAN3RF VARIABLE ';'

   45 expr: VARIABLE
   46     | INT
   47     | DOUBLE
   48     | CHAR
   49     | expr EQ_T expr
   50     | expr NQ_T expr
   51     | expr LQ_T expr
   52     | expr BQ_T expr
   53     | expr '<' expr
   54     | expr '>' expr
   55     | expr '*' expr
   56     | expr '/' expr
   57     | expr '+' expr
   58     | expr '-' expr
   59     | expr '|' expr
   60     | expr '&' expr
   61     | expr '^' expr
   62     | '~' expr
   63     | '-' expr
   64     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'&' (38) 60
'(' (40) 12 13 14 30 38 64
')' (41) 12 13 14 30 38 64
'*' (42) 55
'+' (43) 57
'-' (45) 58 63
'/' (47) 56
':' (58) 25 26
';' (59) 7 12 25 26 33 34 35 44
'<' (60) 53
'=' (61) 18 19 20 33 34 35
'>' (62) 54
'^' (94) 61
'{' (123) 22 27
'|' (124) 59
'}' (125) 22 27
'~' (126) 62
error (256)
INT (258) 39 46
DOUBLE (259) 42 47
CHAR (260) 41 48
STRING (261) 40 43
VARIABLE (262) 18 19 20 30 33 34 35 44 45
AOP (263)
LOP (264)
HAN3RF (265) 20 35 44
IF (266)
SWITCH (267) 30
ELSE (268)
ELSIF (269)
CASE (270) 25
DEFAULT (271) 26
TRUE (272)
FALSE (273)
CONST (274) 19 34
DO (275) 14
WHILE (276) 13 14
FOR (277) 12
AND (278)
OR (279)
NOT (280)
BREAK (281) 31
CONTINUE (282)
LQ_T (283) 51
BQ_T (284) 52
EQ_T (285) 49
NQ_T (286) 50
"==" (287)
"!=" (288)
">=" (289)
"<=" (290)
UMINUS (291)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
list (55)
    on left: 1 2, on right: 0 1
statement (56)
    on left: 3 4 5 6 7 8, on right: 1 12 13 14 25 26 28 29
loop_statement (57)
    on left: 9 10 11, on right: 8
for_statement (58)
    on left: 12, on right: 9
while_statement (59)
    on left: 13, on right: 10
do_statement (60)
    on left: 14, on right: 11
opexpr (61)
    on left: 15 16 17, on right: 12 13 14
assignment_statement2 (62)
    on left: 18 19 20, on right: 15
switch_body_statement (63)
    on left: 21 22, on right: 30
case_list_statement (64)
    on left: 23 24, on right: 22 24
case_statement (65)
    on left: 25 26, on right: 21 23 24
parantasis_statement (66)
    on left: 27, on right: 6
statement_list (67)
    on left: 28 29, on right: 27 29
control_statement (68)
    on left: 30, on right: 5
jump_statement (69)
    on left: 31 32, on right: 25 26
assignment_statement (70)
    on left: 33 34 35, on right: 3
assignment_expr (71)
    on left: 36 37, on right: 18 19 20 33 34 35
const_value (72)
    on left: 38 39 40 41 42, on right: 25 38
string_expr (73)
    on left: 43, on right: 37
declartion_statement (74)
    on left: 44, on right: 4
expr (75)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
    63 64, on right: 7 16 36 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64


State 0

    0 $accept: . list $end

    $default  reduce using rule 2 (list)

    list  go to state 1


State 1

    0 $accept: list . $end
    1 list: list . statement

    $end      shift, and go to state 2
    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    SWITCH    shift, and go to state 8
    CONST     shift, and go to state 9
    DO        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16

    statement             go to state 17
    loop_statement        go to state 18
    for_statement         go to state 19
    while_statement       go to state 20
    do_statement          go to state 21
    parantasis_statement  go to state 22
    control_statement     go to state 23
    assignment_statement  go to state 24
    declartion_statement  go to state 25
    expr                  go to state 26


State 2

    0 $accept: list $end .

    $default  accept


State 3

   46 expr: INT .

    $default  reduce using rule 46 (expr)


State 4

   47 expr: DOUBLE .

    $default  reduce using rule 47 (expr)


State 5

   48 expr: CHAR .

    $default  reduce using rule 48 (expr)


State 6

   33 assignment_statement: VARIABLE . '=' assignment_expr ';'
   45 expr: VARIABLE .

    '='  shift, and go to state 27

    $default  reduce using rule 45 (expr)


State 7

   35 assignment_statement: HAN3RF . VARIABLE '=' assignment_expr ';'
   44 declartion_statement: HAN3RF . VARIABLE ';'

    VARIABLE  shift, and go to state 28


State 8

   30 control_statement: SWITCH . '(' VARIABLE ')' switch_body_statement

    '('  shift, and go to state 29


State 9

   34 assignment_statement: CONST . VARIABLE '=' assignment_expr ';'

    VARIABLE  shift, and go to state 30


State 10

   14 do_statement: DO . statement WHILE '(' opexpr ')'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    SWITCH    shift, and go to state 8
    CONST     shift, and go to state 9
    DO        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16

    statement             go to state 31
    loop_statement        go to state 18
    for_statement         go to state 19
    while_statement       go to state 20
    do_statement          go to state 21
    parantasis_statement  go to state 22
    control_statement     go to state 23
    assignment_statement  go to state 24
    declartion_statement  go to state 25
    expr                  go to state 26


State 11

   13 while_statement: WHILE . '(' opexpr ')' statement

    '('  shift, and go to state 32


State 12

   12 for_statement: FOR . '(' opexpr ';' opexpr ';' opexpr ')' statement

    '('  shift, and go to state 33


State 13

   63 expr: '-' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 35


State 14

   62 expr: '~' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 36


State 15

   64 expr: '(' . expr ')'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 37


State 16

   27 parantasis_statement: '{' . statement_list '}'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    SWITCH    shift, and go to state 8
    CONST     shift, and go to state 9
    DO        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16

    statement             go to state 38
    loop_statement        go to state 18
    for_statement         go to state 19
    while_statement       go to state 20
    do_statement          go to state 21
    parantasis_statement  go to state 22
    statement_list        go to state 39
    control_statement     go to state 23
    assignment_statement  go to state 24
    declartion_statement  go to state 25
    expr                  go to state 26


State 17

    1 list: list statement .

    $default  reduce using rule 1 (list)


State 18

    8 statement: loop_statement .

    $default  reduce using rule 8 (statement)


State 19

    9 loop_statement: for_statement .

    $default  reduce using rule 9 (loop_statement)


State 20

   10 loop_statement: while_statement .

    $default  reduce using rule 10 (loop_statement)


State 21

   11 loop_statement: do_statement .

    $default  reduce using rule 11 (loop_statement)


State 22

    6 statement: parantasis_statement .

    $default  reduce using rule 6 (statement)


State 23

    5 statement: control_statement .

    $default  reduce using rule 5 (statement)


State 24

    3 statement: assignment_statement .

    $default  reduce using rule 3 (statement)


State 25

    4 statement: declartion_statement .

    $default  reduce using rule 4 (statement)


State 26

    7 statement: expr . ';'
   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '>'   shift, and go to state 44
    '<'   shift, and go to state 45
    '-'   shift, and go to state 46
    '+'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52
    ';'   shift, and go to state 53


State 27

   33 assignment_statement: VARIABLE '=' . assignment_expr ';'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 54
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    assignment_expr  go to state 55
    string_expr      go to state 56
    expr             go to state 57


State 28

   35 assignment_statement: HAN3RF VARIABLE . '=' assignment_expr ';'
   44 declartion_statement: HAN3RF VARIABLE . ';'

    ';'  shift, and go to state 58
    '='  shift, and go to state 59


State 29

   30 control_statement: SWITCH '(' . VARIABLE ')' switch_body_statement

    VARIABLE  shift, and go to state 60


State 30

   34 assignment_statement: CONST VARIABLE . '=' assignment_expr ';'

    '='  shift, and go to state 61


State 31

   14 do_statement: DO statement . WHILE '(' opexpr ')'

    WHILE  shift, and go to state 62


State 32

   13 while_statement: WHILE '(' . opexpr ')' statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    $default  reduce using rule 17 (opexpr)

    opexpr                 go to state 66
    assignment_statement2  go to state 67
    expr                   go to state 68


State 33

   12 for_statement: FOR '(' . opexpr ';' opexpr ';' opexpr ')' statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    $default  reduce using rule 17 (opexpr)

    opexpr                 go to state 69
    assignment_statement2  go to state 67
    expr                   go to state 68


State 34

   45 expr: VARIABLE .

    $default  reduce using rule 45 (expr)


State 35

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr
   63     | '-' expr .

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43

    LQ_T      [reduce using rule 63 (expr)]
    BQ_T      [reduce using rule 63 (expr)]
    EQ_T      [reduce using rule 63 (expr)]
    NQ_T      [reduce using rule 63 (expr)]
    $default  reduce using rule 63 (expr)


State 36

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr
   62     | '~' expr .

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 62 (expr)]
    BQ_T      [reduce using rule 62 (expr)]
    EQ_T      [reduce using rule 62 (expr)]
    NQ_T      [reduce using rule 62 (expr)]
    $default  reduce using rule 62 (expr)


State 37

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr
   64     | '(' expr . ')'

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '>'   shift, and go to state 44
    '<'   shift, and go to state 45
    '-'   shift, and go to state 46
    '+'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52
    ')'   shift, and go to state 70


State 38

   28 statement_list: statement .

    $default  reduce using rule 28 (statement_list)


State 39

   27 parantasis_statement: '{' statement_list . '}'
   29 statement_list: statement_list . statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    SWITCH    shift, and go to state 8
    CONST     shift, and go to state 9
    DO        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16
    '}'       shift, and go to state 71

    statement             go to state 72
    loop_statement        go to state 18
    for_statement         go to state 19
    while_statement       go to state 20
    do_statement          go to state 21
    parantasis_statement  go to state 22
    control_statement     go to state 23
    assignment_statement  go to state 24
    declartion_statement  go to state 25
    expr                  go to state 26


State 40

   51 expr: expr LQ_T . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 73


State 41

   52 expr: expr BQ_T . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 74


State 42

   49 expr: expr EQ_T . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 75


State 43

   50 expr: expr NQ_T . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 76


State 44

   54 expr: expr '>' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 77


State 45

   53 expr: expr '<' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 78


State 46

   58 expr: expr '-' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 79


State 47

   57 expr: expr '+' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 80


State 48

   55 expr: expr '*' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 81


State 49

   56 expr: expr '/' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 82


State 50

   59 expr: expr '|' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 83


State 51

   60 expr: expr '&' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 84


State 52

   61 expr: expr '^' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    expr  go to state 85


State 53

    7 statement: expr ';' .

    $default  reduce using rule 7 (statement)


State 54

   43 string_expr: STRING .

    $default  reduce using rule 43 (string_expr)


State 55

   33 assignment_statement: VARIABLE '=' assignment_expr . ';'

    ';'  shift, and go to state 86


State 56

   37 assignment_expr: string_expr .

    $default  reduce using rule 37 (assignment_expr)


State 57

   36 assignment_expr: expr .
   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '>'   shift, and go to state 44
    '<'   shift, and go to state 45
    '-'   shift, and go to state 46
    '+'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    $default  reduce using rule 36 (assignment_expr)


State 58

   44 declartion_statement: HAN3RF VARIABLE ';' .

    $default  reduce using rule 44 (declartion_statement)


State 59

   35 assignment_statement: HAN3RF VARIABLE '=' . assignment_expr ';'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 54
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    assignment_expr  go to state 87
    string_expr      go to state 56
    expr             go to state 57


State 60

   30 control_statement: SWITCH '(' VARIABLE . ')' switch_body_statement

    ')'  shift, and go to state 88


State 61

   34 assignment_statement: CONST VARIABLE '=' . assignment_expr ';'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 54
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    assignment_expr  go to state 89
    string_expr      go to state 56
    expr             go to state 57


State 62

   14 do_statement: DO statement WHILE . '(' opexpr ')'

    '('  shift, and go to state 90


State 63

   18 assignment_statement2: VARIABLE . '=' assignment_expr
   45 expr: VARIABLE .

    '='  shift, and go to state 91

    $default  reduce using rule 45 (expr)


State 64

   20 assignment_statement2: HAN3RF . VARIABLE '=' assignment_expr

    VARIABLE  shift, and go to state 92


State 65

   19 assignment_statement2: CONST . VARIABLE '=' assignment_expr

    VARIABLE  shift, and go to state 93


State 66

   13 while_statement: WHILE '(' opexpr . ')' statement

    ')'  shift, and go to state 94


State 67

   15 opexpr: assignment_statement2 .

    $default  reduce using rule 15 (opexpr)


State 68

   16 opexpr: expr .
   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '>'   shift, and go to state 44
    '<'   shift, and go to state 45
    '-'   shift, and go to state 46
    '+'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    $default  reduce using rule 16 (opexpr)


State 69

   12 for_statement: FOR '(' opexpr . ';' opexpr ';' opexpr ')' statement

    ';'  shift, and go to state 95


State 70

   64 expr: '(' expr ')' .

    $default  reduce using rule 64 (expr)


State 71

   27 parantasis_statement: '{' statement_list '}' .

    $default  reduce using rule 27 (parantasis_statement)


State 72

   29 statement_list: statement_list statement .

    $default  reduce using rule 29 (statement_list)


State 73

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   51     | expr LQ_T expr .
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '>'   shift, and go to state 44
    '<'   shift, and go to state 45
    '-'   shift, and go to state 46
    '+'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 51 (expr)]
    BQ_T      [reduce using rule 51 (expr)]
    EQ_T      [reduce using rule 51 (expr)]
    NQ_T      [reduce using rule 51 (expr)]
    '>'       [reduce using rule 51 (expr)]
    '<'       [reduce using rule 51 (expr)]
    '-'       [reduce using rule 51 (expr)]
    '+'       [reduce using rule 51 (expr)]
    '*'       [reduce using rule 51 (expr)]
    '/'       [reduce using rule 51 (expr)]
    '|'       [reduce using rule 51 (expr)]
    '&'       [reduce using rule 51 (expr)]
    '^'       [reduce using rule 51 (expr)]
    $default  reduce using rule 51 (expr)


State 74

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   52     | expr BQ_T expr .
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '>'   shift, and go to state 44
    '<'   shift, and go to state 45
    '-'   shift, and go to state 46
    '+'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 52 (expr)]
    BQ_T      [reduce using rule 52 (expr)]
    EQ_T      [reduce using rule 52 (expr)]
    NQ_T      [reduce using rule 52 (expr)]
    '>'       [reduce using rule 52 (expr)]
    '<'       [reduce using rule 52 (expr)]
    '-'       [reduce using rule 52 (expr)]
    '+'       [reduce using rule 52 (expr)]
    '*'       [reduce using rule 52 (expr)]
    '/'       [reduce using rule 52 (expr)]
    '|'       [reduce using rule 52 (expr)]
    '&'       [reduce using rule 52 (expr)]
    '^'       [reduce using rule 52 (expr)]
    $default  reduce using rule 52 (expr)


State 75

   49 expr: expr . EQ_T expr
   49     | expr EQ_T expr .
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '>'   shift, and go to state 44
    '<'   shift, and go to state 45
    '-'   shift, and go to state 46
    '+'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 49 (expr)]
    BQ_T      [reduce using rule 49 (expr)]
    EQ_T      [reduce using rule 49 (expr)]
    NQ_T      [reduce using rule 49 (expr)]
    '>'       [reduce using rule 49 (expr)]
    '<'       [reduce using rule 49 (expr)]
    '-'       [reduce using rule 49 (expr)]
    '+'       [reduce using rule 49 (expr)]
    '*'       [reduce using rule 49 (expr)]
    '/'       [reduce using rule 49 (expr)]
    '|'       [reduce using rule 49 (expr)]
    '&'       [reduce using rule 49 (expr)]
    '^'       [reduce using rule 49 (expr)]
    $default  reduce using rule 49 (expr)


State 76

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   50     | expr NQ_T expr .
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '>'   shift, and go to state 44
    '<'   shift, and go to state 45
    '-'   shift, and go to state 46
    '+'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 50 (expr)]
    BQ_T      [reduce using rule 50 (expr)]
    EQ_T      [reduce using rule 50 (expr)]
    NQ_T      [reduce using rule 50 (expr)]
    '>'       [reduce using rule 50 (expr)]
    '<'       [reduce using rule 50 (expr)]
    '-'       [reduce using rule 50 (expr)]
    '+'       [reduce using rule 50 (expr)]
    '*'       [reduce using rule 50 (expr)]
    '/'       [reduce using rule 50 (expr)]
    '|'       [reduce using rule 50 (expr)]
    '&'       [reduce using rule 50 (expr)]
    '^'       [reduce using rule 50 (expr)]
    $default  reduce using rule 50 (expr)


State 77

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   54     | expr '>' expr .
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '-'   shift, and go to state 46
    '+'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 54 (expr)]
    BQ_T      [reduce using rule 54 (expr)]
    EQ_T      [reduce using rule 54 (expr)]
    NQ_T      [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


State 78

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   53     | expr '<' expr .
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '-'   shift, and go to state 46
    '+'   shift, and go to state 47
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 53 (expr)]
    BQ_T      [reduce using rule 53 (expr)]
    EQ_T      [reduce using rule 53 (expr)]
    NQ_T      [reduce using rule 53 (expr)]
    $default  reduce using rule 53 (expr)


State 79

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   58     | expr '-' expr .
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 58 (expr)]
    BQ_T      [reduce using rule 58 (expr)]
    EQ_T      [reduce using rule 58 (expr)]
    NQ_T      [reduce using rule 58 (expr)]
    $default  reduce using rule 58 (expr)


State 80

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   57     | expr '+' expr .
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '*'   shift, and go to state 48
    '/'   shift, and go to state 49
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 57 (expr)]
    BQ_T      [reduce using rule 57 (expr)]
    EQ_T      [reduce using rule 57 (expr)]
    NQ_T      [reduce using rule 57 (expr)]
    $default  reduce using rule 57 (expr)


State 81

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   55     | expr '*' expr .
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 55 (expr)]
    BQ_T      [reduce using rule 55 (expr)]
    EQ_T      [reduce using rule 55 (expr)]
    NQ_T      [reduce using rule 55 (expr)]
    $default  reduce using rule 55 (expr)


State 82

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   56     | expr '/' expr .
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '|'   shift, and go to state 50
    '&'   shift, and go to state 51
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 56 (expr)]
    BQ_T      [reduce using rule 56 (expr)]
    EQ_T      [reduce using rule 56 (expr)]
    NQ_T      [reduce using rule 56 (expr)]
    $default  reduce using rule 56 (expr)


State 83

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   59     | expr '|' expr .
   60     | expr . '&' expr
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 59 (expr)]
    BQ_T      [reduce using rule 59 (expr)]
    EQ_T      [reduce using rule 59 (expr)]
    NQ_T      [reduce using rule 59 (expr)]
    $default  reduce using rule 59 (expr)


State 84

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   60     | expr '&' expr .
   61     | expr . '^' expr

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 60 (expr)]
    BQ_T      [reduce using rule 60 (expr)]
    EQ_T      [reduce using rule 60 (expr)]
    NQ_T      [reduce using rule 60 (expr)]
    $default  reduce using rule 60 (expr)


State 85

   49 expr: expr . EQ_T expr
   50     | expr . NQ_T expr
   51     | expr . LQ_T expr
   52     | expr . BQ_T expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . '+' expr
   58     | expr . '-' expr
   59     | expr . '|' expr
   60     | expr . '&' expr
   61     | expr . '^' expr
   61     | expr '^' expr .

    LQ_T  shift, and go to state 40
    BQ_T  shift, and go to state 41
    EQ_T  shift, and go to state 42
    NQ_T  shift, and go to state 43
    '^'   shift, and go to state 52

    LQ_T      [reduce using rule 61 (expr)]
    BQ_T      [reduce using rule 61 (expr)]
    EQ_T      [reduce using rule 61 (expr)]
    NQ_T      [reduce using rule 61 (expr)]
    $default  reduce using rule 61 (expr)


State 86

   33 assignment_statement: VARIABLE '=' assignment_expr ';' .

    $default  reduce using rule 33 (assignment_statement)


State 87

   35 assignment_statement: HAN3RF VARIABLE '=' assignment_expr . ';'

    ';'  shift, and go to state 96


State 88

   30 control_statement: SWITCH '(' VARIABLE ')' . switch_body_statement

    CASE     shift, and go to state 97
    DEFAULT  shift, and go to state 98
    '{'      shift, and go to state 99

    switch_body_statement  go to state 100
    case_statement         go to state 101


State 89

   34 assignment_statement: CONST VARIABLE '=' assignment_expr . ';'

    ';'  shift, and go to state 102


State 90

   14 do_statement: DO statement WHILE '(' . opexpr ')'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    $default  reduce using rule 17 (opexpr)

    opexpr                 go to state 103
    assignment_statement2  go to state 67
    expr                   go to state 68


State 91

   18 assignment_statement2: VARIABLE '=' . assignment_expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 54
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    assignment_expr  go to state 104
    string_expr      go to state 56
    expr             go to state 57


State 92

   20 assignment_statement2: HAN3RF VARIABLE . '=' assignment_expr

    '='  shift, and go to state 105


State 93

   19 assignment_statement2: CONST VARIABLE . '=' assignment_expr

    '='  shift, and go to state 106


State 94

   13 while_statement: WHILE '(' opexpr ')' . statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    SWITCH    shift, and go to state 8
    CONST     shift, and go to state 9
    DO        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16

    statement             go to state 107
    loop_statement        go to state 18
    for_statement         go to state 19
    while_statement       go to state 20
    do_statement          go to state 21
    parantasis_statement  go to state 22
    control_statement     go to state 23
    assignment_statement  go to state 24
    declartion_statement  go to state 25
    expr                  go to state 26


State 95

   12 for_statement: FOR '(' opexpr ';' . opexpr ';' opexpr ')' statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    $default  reduce using rule 17 (opexpr)

    opexpr                 go to state 108
    assignment_statement2  go to state 67
    expr                   go to state 68


State 96

   35 assignment_statement: HAN3RF VARIABLE '=' assignment_expr ';' .

    $default  reduce using rule 35 (assignment_statement)


State 97

   25 case_statement: CASE . const_value ':' statement jump_statement ';'

    INT     shift, and go to state 109
    DOUBLE  shift, and go to state 110
    CHAR    shift, and go to state 111
    STRING  shift, and go to state 112
    '('     shift, and go to state 113

    const_value  go to state 114


State 98

   26 case_statement: DEFAULT . ':' statement jump_statement ';'

    ':'  shift, and go to state 115


State 99

   22 switch_body_statement: '{' . case_list_statement '}'

    CASE     shift, and go to state 97
    DEFAULT  shift, and go to state 98

    case_list_statement  go to state 116
    case_statement       go to state 117


State 100

   30 control_statement: SWITCH '(' VARIABLE ')' switch_body_statement .

    $default  reduce using rule 30 (control_statement)


State 101

   21 switch_body_statement: case_statement .

    $default  reduce using rule 21 (switch_body_statement)


State 102

   34 assignment_statement: CONST VARIABLE '=' assignment_expr ';' .

    $default  reduce using rule 34 (assignment_statement)


State 103

   14 do_statement: DO statement WHILE '(' opexpr . ')'

    ')'  shift, and go to state 118


State 104

   18 assignment_statement2: VARIABLE '=' assignment_expr .

    $default  reduce using rule 18 (assignment_statement2)


State 105

   20 assignment_statement2: HAN3RF VARIABLE '=' . assignment_expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 54
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    assignment_expr  go to state 119
    string_expr      go to state 56
    expr             go to state 57


State 106

   19 assignment_statement2: CONST VARIABLE '=' . assignment_expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 54
    VARIABLE  shift, and go to state 34
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    assignment_expr  go to state 120
    string_expr      go to state 56
    expr             go to state 57


State 107

   13 while_statement: WHILE '(' opexpr ')' statement .

    $default  reduce using rule 13 (while_statement)


State 108

   12 for_statement: FOR '(' opexpr ';' opexpr . ';' opexpr ')' statement

    ';'  shift, and go to state 121


State 109

   39 const_value: INT .

    $default  reduce using rule 39 (const_value)


State 110

   42 const_value: DOUBLE .

    $default  reduce using rule 42 (const_value)


State 111

   41 const_value: CHAR .

    $default  reduce using rule 41 (const_value)


State 112

   40 const_value: STRING .

    $default  reduce using rule 40 (const_value)


State 113

   38 const_value: '(' . const_value ')'

    INT     shift, and go to state 109
    DOUBLE  shift, and go to state 110
    CHAR    shift, and go to state 111
    STRING  shift, and go to state 112
    '('     shift, and go to state 113

    const_value  go to state 122


State 114

   25 case_statement: CASE const_value . ':' statement jump_statement ';'

    ':'  shift, and go to state 123


State 115

   26 case_statement: DEFAULT ':' . statement jump_statement ';'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    SWITCH    shift, and go to state 8
    CONST     shift, and go to state 9
    DO        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16

    statement             go to state 124
    loop_statement        go to state 18
    for_statement         go to state 19
    while_statement       go to state 20
    do_statement          go to state 21
    parantasis_statement  go to state 22
    control_statement     go to state 23
    assignment_statement  go to state 24
    declartion_statement  go to state 25
    expr                  go to state 26


State 116

   22 switch_body_statement: '{' case_list_statement . '}'
   24 case_list_statement: case_list_statement . case_statement

    CASE     shift, and go to state 97
    DEFAULT  shift, and go to state 98
    '}'      shift, and go to state 125

    case_statement  go to state 126


State 117

   23 case_list_statement: case_statement .

    $default  reduce using rule 23 (case_list_statement)


State 118

   14 do_statement: DO statement WHILE '(' opexpr ')' .

    $default  reduce using rule 14 (do_statement)


State 119

   20 assignment_statement2: HAN3RF VARIABLE '=' assignment_expr .

    $default  reduce using rule 20 (assignment_statement2)


State 120

   19 assignment_statement2: CONST VARIABLE '=' assignment_expr .

    $default  reduce using rule 19 (assignment_statement2)


State 121

   12 for_statement: FOR '(' opexpr ';' opexpr ';' . opexpr ')' statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15

    $default  reduce using rule 17 (opexpr)

    opexpr                 go to state 127
    assignment_statement2  go to state 67
    expr                   go to state 68


State 122

   38 const_value: '(' const_value . ')'

    ')'  shift, and go to state 128


State 123

   25 case_statement: CASE const_value ':' . statement jump_statement ';'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    SWITCH    shift, and go to state 8
    CONST     shift, and go to state 9
    DO        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16

    statement             go to state 129
    loop_statement        go to state 18
    for_statement         go to state 19
    while_statement       go to state 20
    do_statement          go to state 21
    parantasis_statement  go to state 22
    control_statement     go to state 23
    assignment_statement  go to state 24
    declartion_statement  go to state 25
    expr                  go to state 26


State 124

   26 case_statement: DEFAULT ':' statement . jump_statement ';'

    BREAK  shift, and go to state 130

    $default  reduce using rule 32 (jump_statement)

    jump_statement  go to state 131


State 125

   22 switch_body_statement: '{' case_list_statement '}' .

    $default  reduce using rule 22 (switch_body_statement)


State 126

   24 case_list_statement: case_list_statement case_statement .

    $default  reduce using rule 24 (case_list_statement)


State 127

   12 for_statement: FOR '(' opexpr ';' opexpr ';' opexpr . ')' statement

    ')'  shift, and go to state 132


State 128

   38 const_value: '(' const_value ')' .

    $default  reduce using rule 38 (const_value)


State 129

   25 case_statement: CASE const_value ':' statement . jump_statement ';'

    BREAK  shift, and go to state 130

    $default  reduce using rule 32 (jump_statement)

    jump_statement  go to state 133


State 130

   31 jump_statement: BREAK .

    $default  reduce using rule 31 (jump_statement)


State 131

   26 case_statement: DEFAULT ':' statement jump_statement . ';'

    ';'  shift, and go to state 134


State 132

   12 for_statement: FOR '(' opexpr ';' opexpr ';' opexpr ')' . statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    SWITCH    shift, and go to state 8
    CONST     shift, and go to state 9
    DO        shift, and go to state 10
    WHILE     shift, and go to state 11
    FOR       shift, and go to state 12
    '-'       shift, and go to state 13
    '~'       shift, and go to state 14
    '('       shift, and go to state 15
    '{'       shift, and go to state 16

    statement             go to state 135
    loop_statement        go to state 18
    for_statement         go to state 19
    while_statement       go to state 20
    do_statement          go to state 21
    parantasis_statement  go to state 22
    control_statement     go to state 23
    assignment_statement  go to state 24
    declartion_statement  go to state 25
    expr                  go to state 26


State 133

   25 case_statement: CASE const_value ':' statement jump_statement . ';'

    ';'  shift, and go to state 136


State 134

   26 case_statement: DEFAULT ':' statement jump_statement ';' .

    $default  reduce using rule 26 (case_statement)


State 135

   12 for_statement: FOR '(' opexpr ';' opexpr ';' opexpr ')' statement .

    $default  reduce using rule 12 (for_statement)


State 136

   25 case_statement: CASE const_value ':' statement jump_statement ';' .

    $default  reduce using rule 25 (case_statement)
