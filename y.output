Terminals unused in grammar

   AOP
   LOP
   ELSIF
   TRUE
   FALSE
   AND
   OR
   NOT
   CONTINUE
   "=="
   "!="
   ">="
   "<="


State 38 conflicts: 4 shift/reduce
State 39 conflicts: 4 shift/reduce
State 77 conflicts: 13 shift/reduce
State 78 conflicts: 13 shift/reduce
State 79 conflicts: 13 shift/reduce
State 80 conflicts: 13 shift/reduce
State 81 conflicts: 4 shift/reduce
State 82 conflicts: 4 shift/reduce
State 83 conflicts: 4 shift/reduce
State 84 conflicts: 4 shift/reduce
State 85 conflicts: 4 shift/reduce
State 86 conflicts: 4 shift/reduce
State 87 conflicts: 4 shift/reduce
State 88 conflicts: 4 shift/reduce
State 89 conflicts: 4 shift/reduce
State 105 conflicts: 1 shift/reduce


Grammar

    0 $accept: list $end

    1 list: list statement
    2     | %empty

    3 statement: assignment_statement
    4          | declartion_statement
    5          | control_statement
    6          | parantasis_statement
    7          | expr ';'
    8          | loop_statement
    9          | if_statement

   10 loop_statement: for_statement
   11               | while_statement
   12               | do_statement

   13 for_statement: FOR '(' opexpr ';' opexpr ';' opexpr ')' statement

   14 while_statement: WHILE '(' opexpr ')' statement

   15 do_statement: DO statement WHILE '(' opexpr ')'

   16 opexpr: assignment_statement2
   17       | expr
   18       | %empty

   19 assignment_statement2: VARIABLE '=' assignment_expr
   20                      | CONST VARIABLE '=' assignment_expr
   21                      | HAN3RF VARIABLE '=' assignment_expr

   22 if_statement: IF '(' opexpr ')' statement
   23             | IF '(' opexpr ')' statement ELSE statement

   24 switch_body_statement: case_statement
   25                      | '{' case_list_statement '}'

   26 case_list_statement: case_statement
   27                    | case_list_statement case_statement

   28 case_statement: CASE const_value ':' statement jump_statement ';'
   29               | DEFAULT ':' statement jump_statement ';'

   30 parantasis_statement: '{' statement_list '}'

   31 statement_list: statement
   32               | statement_list statement

   33 control_statement: SWITCH '(' VARIABLE ')' switch_body_statement

   34 jump_statement: BREAK
   35               | %empty

   36 assignment_statement: VARIABLE '=' assignment_expr ';'
   37                     | CONST VARIABLE '=' assignment_expr ';'
   38                     | HAN3RF VARIABLE '=' assignment_expr ';'

   39 assignment_expr: expr
   40                | string_expr

   41 const_value: '(' const_value ')'
   42            | INT
   43            | STRING
   44            | CHAR
   45            | DOUBLE

   46 string_expr: STRING

   47 declartion_statement: HAN3RF VARIABLE ';'

   48 expr: VARIABLE
   49     | INT
   50     | DOUBLE
   51     | CHAR
   52     | expr EQ_T expr
   53     | expr NQ_T expr
   54     | expr LQ_T expr
   55     | expr BQ_T expr
   56     | expr '<' expr
   57     | expr '>' expr
   58     | expr '*' expr
   59     | expr '/' expr
   60     | expr '+' expr
   61     | expr '-' expr
   62     | expr '|' expr
   63     | expr '&' expr
   64     | expr '^' expr
   65     | '~' expr
   66     | '-' expr
   67     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'&' (38) 63
'(' (40) 13 14 15 22 23 33 41 67
')' (41) 13 14 15 22 23 33 41 67
'*' (42) 58
'+' (43) 60
'-' (45) 61 66
'/' (47) 59
':' (58) 28 29
';' (59) 7 13 28 29 36 37 38 47
'<' (60) 56
'=' (61) 19 20 21 36 37 38
'>' (62) 57
'^' (94) 64
'{' (123) 25 30
'|' (124) 62
'}' (125) 25 30
'~' (126) 65
error (256)
INT (258) 42 49
DOUBLE (259) 45 50
CHAR (260) 44 51
STRING (261) 43 46
VARIABLE (262) 19 20 21 33 36 37 38 47 48
AOP (263)
LOP (264)
HAN3RF (265) 21 38 47
IF (266) 22 23
SWITCH (267) 33
ELSE (268) 23
ELSIF (269)
CASE (270) 28
DEFAULT (271) 29
TRUE (272)
FALSE (273)
CONST (274) 20 37
DO (275) 15
WHILE (276) 14 15
FOR (277) 13
AND (278)
OR (279)
NOT (280)
BREAK (281) 34
CONTINUE (282)
LQ_T (283) 54
BQ_T (284) 55
EQ_T (285) 52
NQ_T (286) 53
"==" (287)
"!=" (288)
">=" (289)
"<=" (290)
UMINUS (291)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
list (55)
    on left: 1 2, on right: 0 1
statement (56)
    on left: 3 4 5 6 7 8 9, on right: 1 13 14 15 22 23 28 29 31 32
loop_statement (57)
    on left: 10 11 12, on right: 8
for_statement (58)
    on left: 13, on right: 10
while_statement (59)
    on left: 14, on right: 11
do_statement (60)
    on left: 15, on right: 12
opexpr (61)
    on left: 16 17 18, on right: 13 14 15 22 23
assignment_statement2 (62)
    on left: 19 20 21, on right: 16
if_statement (63)
    on left: 22 23, on right: 9
switch_body_statement (64)
    on left: 24 25, on right: 33
case_list_statement (65)
    on left: 26 27, on right: 25 27
case_statement (66)
    on left: 28 29, on right: 24 26 27
parantasis_statement (67)
    on left: 30, on right: 6
statement_list (68)
    on left: 31 32, on right: 30 32
control_statement (69)
    on left: 33, on right: 5
jump_statement (70)
    on left: 34 35, on right: 28 29
assignment_statement (71)
    on left: 36 37 38, on right: 3
assignment_expr (72)
    on left: 39 40, on right: 19 20 21 36 37 38
const_value (73)
    on left: 41 42 43 44 45, on right: 28 41
string_expr (74)
    on left: 46, on right: 40
declartion_statement (75)
    on left: 47, on right: 4
expr (76)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67, on right: 7 17 39 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67


State 0

    0 $accept: . list $end

    $default  reduce using rule 2 (list)

    list  go to state 1


State 1

    0 $accept: list . $end
    1 list: list . statement

    $end      shift, and go to state 2
    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    IF        shift, and go to state 8
    SWITCH    shift, and go to state 9
    CONST     shift, and go to state 10
    DO        shift, and go to state 11
    WHILE     shift, and go to state 12
    FOR       shift, and go to state 13
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    statement             go to state 18
    loop_statement        go to state 19
    for_statement         go to state 20
    while_statement       go to state 21
    do_statement          go to state 22
    if_statement          go to state 23
    parantasis_statement  go to state 24
    control_statement     go to state 25
    assignment_statement  go to state 26
    declartion_statement  go to state 27
    expr                  go to state 28


State 2

    0 $accept: list $end .

    $default  accept


State 3

   49 expr: INT .

    $default  reduce using rule 49 (expr)


State 4

   50 expr: DOUBLE .

    $default  reduce using rule 50 (expr)


State 5

   51 expr: CHAR .

    $default  reduce using rule 51 (expr)


State 6

   36 assignment_statement: VARIABLE . '=' assignment_expr ';'
   48 expr: VARIABLE .

    '='  shift, and go to state 29

    $default  reduce using rule 48 (expr)


State 7

   38 assignment_statement: HAN3RF . VARIABLE '=' assignment_expr ';'
   47 declartion_statement: HAN3RF . VARIABLE ';'

    VARIABLE  shift, and go to state 30


State 8

   22 if_statement: IF . '(' opexpr ')' statement
   23             | IF . '(' opexpr ')' statement ELSE statement

    '('  shift, and go to state 31


State 9

   33 control_statement: SWITCH . '(' VARIABLE ')' switch_body_statement

    '('  shift, and go to state 32


State 10

   37 assignment_statement: CONST . VARIABLE '=' assignment_expr ';'

    VARIABLE  shift, and go to state 33


State 11

   15 do_statement: DO . statement WHILE '(' opexpr ')'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    IF        shift, and go to state 8
    SWITCH    shift, and go to state 9
    CONST     shift, and go to state 10
    DO        shift, and go to state 11
    WHILE     shift, and go to state 12
    FOR       shift, and go to state 13
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    statement             go to state 34
    loop_statement        go to state 19
    for_statement         go to state 20
    while_statement       go to state 21
    do_statement          go to state 22
    if_statement          go to state 23
    parantasis_statement  go to state 24
    control_statement     go to state 25
    assignment_statement  go to state 26
    declartion_statement  go to state 27
    expr                  go to state 28


State 12

   14 while_statement: WHILE . '(' opexpr ')' statement

    '('  shift, and go to state 35


State 13

   13 for_statement: FOR . '(' opexpr ';' opexpr ';' opexpr ')' statement

    '('  shift, and go to state 36


State 14

   66 expr: '-' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 38


State 15

   65 expr: '~' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 39


State 16

   67 expr: '(' . expr ')'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 40


State 17

   30 parantasis_statement: '{' . statement_list '}'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    IF        shift, and go to state 8
    SWITCH    shift, and go to state 9
    CONST     shift, and go to state 10
    DO        shift, and go to state 11
    WHILE     shift, and go to state 12
    FOR       shift, and go to state 13
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    statement             go to state 41
    loop_statement        go to state 19
    for_statement         go to state 20
    while_statement       go to state 21
    do_statement          go to state 22
    if_statement          go to state 23
    parantasis_statement  go to state 24
    statement_list        go to state 42
    control_statement     go to state 25
    assignment_statement  go to state 26
    declartion_statement  go to state 27
    expr                  go to state 28


State 18

    1 list: list statement .

    $default  reduce using rule 1 (list)


State 19

    8 statement: loop_statement .

    $default  reduce using rule 8 (statement)


State 20

   10 loop_statement: for_statement .

    $default  reduce using rule 10 (loop_statement)


State 21

   11 loop_statement: while_statement .

    $default  reduce using rule 11 (loop_statement)


State 22

   12 loop_statement: do_statement .

    $default  reduce using rule 12 (loop_statement)


State 23

    9 statement: if_statement .

    $default  reduce using rule 9 (statement)


State 24

    6 statement: parantasis_statement .

    $default  reduce using rule 6 (statement)


State 25

    5 statement: control_statement .

    $default  reduce using rule 5 (statement)


State 26

    3 statement: assignment_statement .

    $default  reduce using rule 3 (statement)


State 27

    4 statement: declartion_statement .

    $default  reduce using rule 4 (statement)


State 28

    7 statement: expr . ';'
   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '>'   shift, and go to state 47
    '<'   shift, and go to state 48
    '-'   shift, and go to state 49
    '+'   shift, and go to state 50
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55
    ';'   shift, and go to state 56


State 29

   36 assignment_statement: VARIABLE '=' . assignment_expr ';'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 57
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    assignment_expr  go to state 58
    string_expr      go to state 59
    expr             go to state 60


State 30

   38 assignment_statement: HAN3RF VARIABLE . '=' assignment_expr ';'
   47 declartion_statement: HAN3RF VARIABLE . ';'

    ';'  shift, and go to state 61
    '='  shift, and go to state 62


State 31

   22 if_statement: IF '(' . opexpr ')' statement
   23             | IF '(' . opexpr ')' statement ELSE statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    $default  reduce using rule 18 (opexpr)

    opexpr                 go to state 66
    assignment_statement2  go to state 67
    expr                   go to state 68


State 32

   33 control_statement: SWITCH '(' . VARIABLE ')' switch_body_statement

    VARIABLE  shift, and go to state 69


State 33

   37 assignment_statement: CONST VARIABLE . '=' assignment_expr ';'

    '='  shift, and go to state 70


State 34

   15 do_statement: DO statement . WHILE '(' opexpr ')'

    WHILE  shift, and go to state 71


State 35

   14 while_statement: WHILE '(' . opexpr ')' statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    $default  reduce using rule 18 (opexpr)

    opexpr                 go to state 72
    assignment_statement2  go to state 67
    expr                   go to state 68


State 36

   13 for_statement: FOR '(' . opexpr ';' opexpr ';' opexpr ')' statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    $default  reduce using rule 18 (opexpr)

    opexpr                 go to state 73
    assignment_statement2  go to state 67
    expr                   go to state 68


State 37

   48 expr: VARIABLE .

    $default  reduce using rule 48 (expr)


State 38

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr
   66     | '-' expr .

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46

    LQ_T      [reduce using rule 66 (expr)]
    BQ_T      [reduce using rule 66 (expr)]
    EQ_T      [reduce using rule 66 (expr)]
    NQ_T      [reduce using rule 66 (expr)]
    $default  reduce using rule 66 (expr)


State 39

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr
   65     | '~' expr .

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 65 (expr)]
    BQ_T      [reduce using rule 65 (expr)]
    EQ_T      [reduce using rule 65 (expr)]
    NQ_T      [reduce using rule 65 (expr)]
    $default  reduce using rule 65 (expr)


State 40

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr
   67     | '(' expr . ')'

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '>'   shift, and go to state 47
    '<'   shift, and go to state 48
    '-'   shift, and go to state 49
    '+'   shift, and go to state 50
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55
    ')'   shift, and go to state 74


State 41

   31 statement_list: statement .

    $default  reduce using rule 31 (statement_list)


State 42

   30 parantasis_statement: '{' statement_list . '}'
   32 statement_list: statement_list . statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    IF        shift, and go to state 8
    SWITCH    shift, and go to state 9
    CONST     shift, and go to state 10
    DO        shift, and go to state 11
    WHILE     shift, and go to state 12
    FOR       shift, and go to state 13
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17
    '}'       shift, and go to state 75

    statement             go to state 76
    loop_statement        go to state 19
    for_statement         go to state 20
    while_statement       go to state 21
    do_statement          go to state 22
    if_statement          go to state 23
    parantasis_statement  go to state 24
    control_statement     go to state 25
    assignment_statement  go to state 26
    declartion_statement  go to state 27
    expr                  go to state 28


State 43

   54 expr: expr LQ_T . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 77


State 44

   55 expr: expr BQ_T . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 78


State 45

   52 expr: expr EQ_T . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 79


State 46

   53 expr: expr NQ_T . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 80


State 47

   57 expr: expr '>' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 81


State 48

   56 expr: expr '<' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 82


State 49

   61 expr: expr '-' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 83


State 50

   60 expr: expr '+' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 84


State 51

   58 expr: expr '*' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 85


State 52

   59 expr: expr '/' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 86


State 53

   62 expr: expr '|' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 87


State 54

   63 expr: expr '&' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 88


State 55

   64 expr: expr '^' . expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    expr  go to state 89


State 56

    7 statement: expr ';' .

    $default  reduce using rule 7 (statement)


State 57

   46 string_expr: STRING .

    $default  reduce using rule 46 (string_expr)


State 58

   36 assignment_statement: VARIABLE '=' assignment_expr . ';'

    ';'  shift, and go to state 90


State 59

   40 assignment_expr: string_expr .

    $default  reduce using rule 40 (assignment_expr)


State 60

   39 assignment_expr: expr .
   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '>'   shift, and go to state 47
    '<'   shift, and go to state 48
    '-'   shift, and go to state 49
    '+'   shift, and go to state 50
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    $default  reduce using rule 39 (assignment_expr)


State 61

   47 declartion_statement: HAN3RF VARIABLE ';' .

    $default  reduce using rule 47 (declartion_statement)


State 62

   38 assignment_statement: HAN3RF VARIABLE '=' . assignment_expr ';'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 57
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    assignment_expr  go to state 91
    string_expr      go to state 59
    expr             go to state 60


State 63

   19 assignment_statement2: VARIABLE . '=' assignment_expr
   48 expr: VARIABLE .

    '='  shift, and go to state 92

    $default  reduce using rule 48 (expr)


State 64

   21 assignment_statement2: HAN3RF . VARIABLE '=' assignment_expr

    VARIABLE  shift, and go to state 93


State 65

   20 assignment_statement2: CONST . VARIABLE '=' assignment_expr

    VARIABLE  shift, and go to state 94


State 66

   22 if_statement: IF '(' opexpr . ')' statement
   23             | IF '(' opexpr . ')' statement ELSE statement

    ')'  shift, and go to state 95


State 67

   16 opexpr: assignment_statement2 .

    $default  reduce using rule 16 (opexpr)


State 68

   17 opexpr: expr .
   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '>'   shift, and go to state 47
    '<'   shift, and go to state 48
    '-'   shift, and go to state 49
    '+'   shift, and go to state 50
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    $default  reduce using rule 17 (opexpr)


State 69

   33 control_statement: SWITCH '(' VARIABLE . ')' switch_body_statement

    ')'  shift, and go to state 96


State 70

   37 assignment_statement: CONST VARIABLE '=' . assignment_expr ';'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 57
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    assignment_expr  go to state 97
    string_expr      go to state 59
    expr             go to state 60


State 71

   15 do_statement: DO statement WHILE . '(' opexpr ')'

    '('  shift, and go to state 98


State 72

   14 while_statement: WHILE '(' opexpr . ')' statement

    ')'  shift, and go to state 99


State 73

   13 for_statement: FOR '(' opexpr . ';' opexpr ';' opexpr ')' statement

    ';'  shift, and go to state 100


State 74

   67 expr: '(' expr ')' .

    $default  reduce using rule 67 (expr)


State 75

   30 parantasis_statement: '{' statement_list '}' .

    $default  reduce using rule 30 (parantasis_statement)


State 76

   32 statement_list: statement_list statement .

    $default  reduce using rule 32 (statement_list)


State 77

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   54     | expr LQ_T expr .
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '>'   shift, and go to state 47
    '<'   shift, and go to state 48
    '-'   shift, and go to state 49
    '+'   shift, and go to state 50
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 54 (expr)]
    BQ_T      [reduce using rule 54 (expr)]
    EQ_T      [reduce using rule 54 (expr)]
    NQ_T      [reduce using rule 54 (expr)]
    '>'       [reduce using rule 54 (expr)]
    '<'       [reduce using rule 54 (expr)]
    '-'       [reduce using rule 54 (expr)]
    '+'       [reduce using rule 54 (expr)]
    '*'       [reduce using rule 54 (expr)]
    '/'       [reduce using rule 54 (expr)]
    '|'       [reduce using rule 54 (expr)]
    '&'       [reduce using rule 54 (expr)]
    '^'       [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


State 78

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   55     | expr BQ_T expr .
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '>'   shift, and go to state 47
    '<'   shift, and go to state 48
    '-'   shift, and go to state 49
    '+'   shift, and go to state 50
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 55 (expr)]
    BQ_T      [reduce using rule 55 (expr)]
    EQ_T      [reduce using rule 55 (expr)]
    NQ_T      [reduce using rule 55 (expr)]
    '>'       [reduce using rule 55 (expr)]
    '<'       [reduce using rule 55 (expr)]
    '-'       [reduce using rule 55 (expr)]
    '+'       [reduce using rule 55 (expr)]
    '*'       [reduce using rule 55 (expr)]
    '/'       [reduce using rule 55 (expr)]
    '|'       [reduce using rule 55 (expr)]
    '&'       [reduce using rule 55 (expr)]
    '^'       [reduce using rule 55 (expr)]
    $default  reduce using rule 55 (expr)


State 79

   52 expr: expr . EQ_T expr
   52     | expr EQ_T expr .
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '>'   shift, and go to state 47
    '<'   shift, and go to state 48
    '-'   shift, and go to state 49
    '+'   shift, and go to state 50
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 52 (expr)]
    BQ_T      [reduce using rule 52 (expr)]
    EQ_T      [reduce using rule 52 (expr)]
    NQ_T      [reduce using rule 52 (expr)]
    '>'       [reduce using rule 52 (expr)]
    '<'       [reduce using rule 52 (expr)]
    '-'       [reduce using rule 52 (expr)]
    '+'       [reduce using rule 52 (expr)]
    '*'       [reduce using rule 52 (expr)]
    '/'       [reduce using rule 52 (expr)]
    '|'       [reduce using rule 52 (expr)]
    '&'       [reduce using rule 52 (expr)]
    '^'       [reduce using rule 52 (expr)]
    $default  reduce using rule 52 (expr)


State 80

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   53     | expr NQ_T expr .
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '>'   shift, and go to state 47
    '<'   shift, and go to state 48
    '-'   shift, and go to state 49
    '+'   shift, and go to state 50
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 53 (expr)]
    BQ_T      [reduce using rule 53 (expr)]
    EQ_T      [reduce using rule 53 (expr)]
    NQ_T      [reduce using rule 53 (expr)]
    '>'       [reduce using rule 53 (expr)]
    '<'       [reduce using rule 53 (expr)]
    '-'       [reduce using rule 53 (expr)]
    '+'       [reduce using rule 53 (expr)]
    '*'       [reduce using rule 53 (expr)]
    '/'       [reduce using rule 53 (expr)]
    '|'       [reduce using rule 53 (expr)]
    '&'       [reduce using rule 53 (expr)]
    '^'       [reduce using rule 53 (expr)]
    $default  reduce using rule 53 (expr)


State 81

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   57     | expr '>' expr .
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '-'   shift, and go to state 49
    '+'   shift, and go to state 50
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 57 (expr)]
    BQ_T      [reduce using rule 57 (expr)]
    EQ_T      [reduce using rule 57 (expr)]
    NQ_T      [reduce using rule 57 (expr)]
    $default  reduce using rule 57 (expr)


State 82

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   56     | expr '<' expr .
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '-'   shift, and go to state 49
    '+'   shift, and go to state 50
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 56 (expr)]
    BQ_T      [reduce using rule 56 (expr)]
    EQ_T      [reduce using rule 56 (expr)]
    NQ_T      [reduce using rule 56 (expr)]
    $default  reduce using rule 56 (expr)


State 83

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   61     | expr '-' expr .
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 61 (expr)]
    BQ_T      [reduce using rule 61 (expr)]
    EQ_T      [reduce using rule 61 (expr)]
    NQ_T      [reduce using rule 61 (expr)]
    $default  reduce using rule 61 (expr)


State 84

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   60     | expr '+' expr .
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '*'   shift, and go to state 51
    '/'   shift, and go to state 52
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 60 (expr)]
    BQ_T      [reduce using rule 60 (expr)]
    EQ_T      [reduce using rule 60 (expr)]
    NQ_T      [reduce using rule 60 (expr)]
    $default  reduce using rule 60 (expr)


State 85

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   58     | expr '*' expr .
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 58 (expr)]
    BQ_T      [reduce using rule 58 (expr)]
    EQ_T      [reduce using rule 58 (expr)]
    NQ_T      [reduce using rule 58 (expr)]
    $default  reduce using rule 58 (expr)


State 86

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   59     | expr '/' expr .
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '|'   shift, and go to state 53
    '&'   shift, and go to state 54
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 59 (expr)]
    BQ_T      [reduce using rule 59 (expr)]
    EQ_T      [reduce using rule 59 (expr)]
    NQ_T      [reduce using rule 59 (expr)]
    $default  reduce using rule 59 (expr)


State 87

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   62     | expr '|' expr .
   63     | expr . '&' expr
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 62 (expr)]
    BQ_T      [reduce using rule 62 (expr)]
    EQ_T      [reduce using rule 62 (expr)]
    NQ_T      [reduce using rule 62 (expr)]
    $default  reduce using rule 62 (expr)


State 88

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   63     | expr '&' expr .
   64     | expr . '^' expr

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 63 (expr)]
    BQ_T      [reduce using rule 63 (expr)]
    EQ_T      [reduce using rule 63 (expr)]
    NQ_T      [reduce using rule 63 (expr)]
    $default  reduce using rule 63 (expr)


State 89

   52 expr: expr . EQ_T expr
   53     | expr . NQ_T expr
   54     | expr . LQ_T expr
   55     | expr . BQ_T expr
   56     | expr . '<' expr
   57     | expr . '>' expr
   58     | expr . '*' expr
   59     | expr . '/' expr
   60     | expr . '+' expr
   61     | expr . '-' expr
   62     | expr . '|' expr
   63     | expr . '&' expr
   64     | expr . '^' expr
   64     | expr '^' expr .

    LQ_T  shift, and go to state 43
    BQ_T  shift, and go to state 44
    EQ_T  shift, and go to state 45
    NQ_T  shift, and go to state 46
    '^'   shift, and go to state 55

    LQ_T      [reduce using rule 64 (expr)]
    BQ_T      [reduce using rule 64 (expr)]
    EQ_T      [reduce using rule 64 (expr)]
    NQ_T      [reduce using rule 64 (expr)]
    $default  reduce using rule 64 (expr)


State 90

   36 assignment_statement: VARIABLE '=' assignment_expr ';' .

    $default  reduce using rule 36 (assignment_statement)


State 91

   38 assignment_statement: HAN3RF VARIABLE '=' assignment_expr . ';'

    ';'  shift, and go to state 101


State 92

   19 assignment_statement2: VARIABLE '=' . assignment_expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 57
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    assignment_expr  go to state 102
    string_expr      go to state 59
    expr             go to state 60


State 93

   21 assignment_statement2: HAN3RF VARIABLE . '=' assignment_expr

    '='  shift, and go to state 103


State 94

   20 assignment_statement2: CONST VARIABLE . '=' assignment_expr

    '='  shift, and go to state 104


State 95

   22 if_statement: IF '(' opexpr ')' . statement
   23             | IF '(' opexpr ')' . statement ELSE statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    IF        shift, and go to state 8
    SWITCH    shift, and go to state 9
    CONST     shift, and go to state 10
    DO        shift, and go to state 11
    WHILE     shift, and go to state 12
    FOR       shift, and go to state 13
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    statement             go to state 105
    loop_statement        go to state 19
    for_statement         go to state 20
    while_statement       go to state 21
    do_statement          go to state 22
    if_statement          go to state 23
    parantasis_statement  go to state 24
    control_statement     go to state 25
    assignment_statement  go to state 26
    declartion_statement  go to state 27
    expr                  go to state 28


State 96

   33 control_statement: SWITCH '(' VARIABLE ')' . switch_body_statement

    CASE     shift, and go to state 106
    DEFAULT  shift, and go to state 107
    '{'      shift, and go to state 108

    switch_body_statement  go to state 109
    case_statement         go to state 110


State 97

   37 assignment_statement: CONST VARIABLE '=' assignment_expr . ';'

    ';'  shift, and go to state 111


State 98

   15 do_statement: DO statement WHILE '(' . opexpr ')'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    $default  reduce using rule 18 (opexpr)

    opexpr                 go to state 112
    assignment_statement2  go to state 67
    expr                   go to state 68


State 99

   14 while_statement: WHILE '(' opexpr ')' . statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    IF        shift, and go to state 8
    SWITCH    shift, and go to state 9
    CONST     shift, and go to state 10
    DO        shift, and go to state 11
    WHILE     shift, and go to state 12
    FOR       shift, and go to state 13
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    statement             go to state 113
    loop_statement        go to state 19
    for_statement         go to state 20
    while_statement       go to state 21
    do_statement          go to state 22
    if_statement          go to state 23
    parantasis_statement  go to state 24
    control_statement     go to state 25
    assignment_statement  go to state 26
    declartion_statement  go to state 27
    expr                  go to state 28


State 100

   13 for_statement: FOR '(' opexpr ';' . opexpr ';' opexpr ')' statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    $default  reduce using rule 18 (opexpr)

    opexpr                 go to state 114
    assignment_statement2  go to state 67
    expr                   go to state 68


State 101

   38 assignment_statement: HAN3RF VARIABLE '=' assignment_expr ';' .

    $default  reduce using rule 38 (assignment_statement)


State 102

   19 assignment_statement2: VARIABLE '=' assignment_expr .

    $default  reduce using rule 19 (assignment_statement2)


State 103

   21 assignment_statement2: HAN3RF VARIABLE '=' . assignment_expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 57
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    assignment_expr  go to state 115
    string_expr      go to state 59
    expr             go to state 60


State 104

   20 assignment_statement2: CONST VARIABLE '=' . assignment_expr

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    STRING    shift, and go to state 57
    VARIABLE  shift, and go to state 37
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    assignment_expr  go to state 116
    string_expr      go to state 59
    expr             go to state 60


State 105

   22 if_statement: IF '(' opexpr ')' statement .
   23             | IF '(' opexpr ')' statement . ELSE statement

    ELSE  shift, and go to state 117

    ELSE      [reduce using rule 22 (if_statement)]
    $default  reduce using rule 22 (if_statement)


State 106

   28 case_statement: CASE . const_value ':' statement jump_statement ';'

    INT     shift, and go to state 118
    DOUBLE  shift, and go to state 119
    CHAR    shift, and go to state 120
    STRING  shift, and go to state 121
    '('     shift, and go to state 122

    const_value  go to state 123


State 107

   29 case_statement: DEFAULT . ':' statement jump_statement ';'

    ':'  shift, and go to state 124


State 108

   25 switch_body_statement: '{' . case_list_statement '}'

    CASE     shift, and go to state 106
    DEFAULT  shift, and go to state 107

    case_list_statement  go to state 125
    case_statement       go to state 126


State 109

   33 control_statement: SWITCH '(' VARIABLE ')' switch_body_statement .

    $default  reduce using rule 33 (control_statement)


State 110

   24 switch_body_statement: case_statement .

    $default  reduce using rule 24 (switch_body_statement)


State 111

   37 assignment_statement: CONST VARIABLE '=' assignment_expr ';' .

    $default  reduce using rule 37 (assignment_statement)


State 112

   15 do_statement: DO statement WHILE '(' opexpr . ')'

    ')'  shift, and go to state 127


State 113

   14 while_statement: WHILE '(' opexpr ')' statement .

    $default  reduce using rule 14 (while_statement)


State 114

   13 for_statement: FOR '(' opexpr ';' opexpr . ';' opexpr ')' statement

    ';'  shift, and go to state 128


State 115

   21 assignment_statement2: HAN3RF VARIABLE '=' assignment_expr .

    $default  reduce using rule 21 (assignment_statement2)


State 116

   20 assignment_statement2: CONST VARIABLE '=' assignment_expr .

    $default  reduce using rule 20 (assignment_statement2)


State 117

   23 if_statement: IF '(' opexpr ')' statement ELSE . statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    IF        shift, and go to state 8
    SWITCH    shift, and go to state 9
    CONST     shift, and go to state 10
    DO        shift, and go to state 11
    WHILE     shift, and go to state 12
    FOR       shift, and go to state 13
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    statement             go to state 129
    loop_statement        go to state 19
    for_statement         go to state 20
    while_statement       go to state 21
    do_statement          go to state 22
    if_statement          go to state 23
    parantasis_statement  go to state 24
    control_statement     go to state 25
    assignment_statement  go to state 26
    declartion_statement  go to state 27
    expr                  go to state 28


State 118

   42 const_value: INT .

    $default  reduce using rule 42 (const_value)


State 119

   45 const_value: DOUBLE .

    $default  reduce using rule 45 (const_value)


State 120

   44 const_value: CHAR .

    $default  reduce using rule 44 (const_value)


State 121

   43 const_value: STRING .

    $default  reduce using rule 43 (const_value)


State 122

   41 const_value: '(' . const_value ')'

    INT     shift, and go to state 118
    DOUBLE  shift, and go to state 119
    CHAR    shift, and go to state 120
    STRING  shift, and go to state 121
    '('     shift, and go to state 122

    const_value  go to state 130


State 123

   28 case_statement: CASE const_value . ':' statement jump_statement ';'

    ':'  shift, and go to state 131


State 124

   29 case_statement: DEFAULT ':' . statement jump_statement ';'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    IF        shift, and go to state 8
    SWITCH    shift, and go to state 9
    CONST     shift, and go to state 10
    DO        shift, and go to state 11
    WHILE     shift, and go to state 12
    FOR       shift, and go to state 13
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    statement             go to state 132
    loop_statement        go to state 19
    for_statement         go to state 20
    while_statement       go to state 21
    do_statement          go to state 22
    if_statement          go to state 23
    parantasis_statement  go to state 24
    control_statement     go to state 25
    assignment_statement  go to state 26
    declartion_statement  go to state 27
    expr                  go to state 28


State 125

   25 switch_body_statement: '{' case_list_statement . '}'
   27 case_list_statement: case_list_statement . case_statement

    CASE     shift, and go to state 106
    DEFAULT  shift, and go to state 107
    '}'      shift, and go to state 133

    case_statement  go to state 134


State 126

   26 case_list_statement: case_statement .

    $default  reduce using rule 26 (case_list_statement)


State 127

   15 do_statement: DO statement WHILE '(' opexpr ')' .

    $default  reduce using rule 15 (do_statement)


State 128

   13 for_statement: FOR '(' opexpr ';' opexpr ';' . opexpr ')' statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 63
    HAN3RF    shift, and go to state 64
    CONST     shift, and go to state 65
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16

    $default  reduce using rule 18 (opexpr)

    opexpr                 go to state 135
    assignment_statement2  go to state 67
    expr                   go to state 68


State 129

   23 if_statement: IF '(' opexpr ')' statement ELSE statement .

    $default  reduce using rule 23 (if_statement)


State 130

   41 const_value: '(' const_value . ')'

    ')'  shift, and go to state 136


State 131

   28 case_statement: CASE const_value ':' . statement jump_statement ';'

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    IF        shift, and go to state 8
    SWITCH    shift, and go to state 9
    CONST     shift, and go to state 10
    DO        shift, and go to state 11
    WHILE     shift, and go to state 12
    FOR       shift, and go to state 13
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    statement             go to state 137
    loop_statement        go to state 19
    for_statement         go to state 20
    while_statement       go to state 21
    do_statement          go to state 22
    if_statement          go to state 23
    parantasis_statement  go to state 24
    control_statement     go to state 25
    assignment_statement  go to state 26
    declartion_statement  go to state 27
    expr                  go to state 28


State 132

   29 case_statement: DEFAULT ':' statement . jump_statement ';'

    BREAK  shift, and go to state 138

    $default  reduce using rule 35 (jump_statement)

    jump_statement  go to state 139


State 133

   25 switch_body_statement: '{' case_list_statement '}' .

    $default  reduce using rule 25 (switch_body_statement)


State 134

   27 case_list_statement: case_list_statement case_statement .

    $default  reduce using rule 27 (case_list_statement)


State 135

   13 for_statement: FOR '(' opexpr ';' opexpr ';' opexpr . ')' statement

    ')'  shift, and go to state 140


State 136

   41 const_value: '(' const_value ')' .

    $default  reduce using rule 41 (const_value)


State 137

   28 case_statement: CASE const_value ':' statement . jump_statement ';'

    BREAK  shift, and go to state 138

    $default  reduce using rule 35 (jump_statement)

    jump_statement  go to state 141


State 138

   34 jump_statement: BREAK .

    $default  reduce using rule 34 (jump_statement)


State 139

   29 case_statement: DEFAULT ':' statement jump_statement . ';'

    ';'  shift, and go to state 142


State 140

   13 for_statement: FOR '(' opexpr ';' opexpr ';' opexpr ')' . statement

    INT       shift, and go to state 3
    DOUBLE    shift, and go to state 4
    CHAR      shift, and go to state 5
    VARIABLE  shift, and go to state 6
    HAN3RF    shift, and go to state 7
    IF        shift, and go to state 8
    SWITCH    shift, and go to state 9
    CONST     shift, and go to state 10
    DO        shift, and go to state 11
    WHILE     shift, and go to state 12
    FOR       shift, and go to state 13
    '-'       shift, and go to state 14
    '~'       shift, and go to state 15
    '('       shift, and go to state 16
    '{'       shift, and go to state 17

    statement             go to state 143
    loop_statement        go to state 19
    for_statement         go to state 20
    while_statement       go to state 21
    do_statement          go to state 22
    if_statement          go to state 23
    parantasis_statement  go to state 24
    control_statement     go to state 25
    assignment_statement  go to state 26
    declartion_statement  go to state 27
    expr                  go to state 28


State 141

   28 case_statement: CASE const_value ':' statement jump_statement . ';'

    ';'  shift, and go to state 144


State 142

   29 case_statement: DEFAULT ':' statement jump_statement ';' .

    $default  reduce using rule 29 (case_statement)


State 143

   13 for_statement: FOR '(' opexpr ';' opexpr ';' opexpr ')' statement .

    $default  reduce using rule 13 (for_statement)


State 144

   28 case_statement: CASE const_value ':' statement jump_statement ';' .

    $default  reduce using rule 28 (case_statement)
